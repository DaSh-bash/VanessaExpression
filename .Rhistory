dddsLR
countLR<- dds@assays@data@listData[["counts"]]
load("/Users/dshipilina/GitHub/VanessaExpression/deseq2_qc/deseq2.dds.RData")
#dds
head(colData(dds))
countLR<- dds@assays@data@listData[["counts"]]
colDataLR <- colData(dds)
dddsLR <- DESeqDataSetFromMatrix(countData=countLR, colData =colDataLR, design = ~Group3)
resLR <- resLR[order(resLR$padj),]
countLR<- dds@assays@data@listData[["counts"]]
colDataLR <- colData(dds)
ddsLR <- DESeqDataSetFromMatrix(countData=countLR, colData =colDataLR, design = ~Group3)
ddsLR <- DESeq(ddsLR)
resLR <- results(ddsLR)
resLR <- resLR[order(resLR$padj),]
head(resLR)
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(resLR, plot(log2FoldChange, -log10(pvalue), pch=20, main="Volcano plot", xlim=c(-3,3)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(resLR, padj<.01 ), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(resLR, padj<.01 & abs(log2FoldChange)>2), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
countLR
keep <- rowSums(counts(ddsLR)) >= 10
ddsLR <- ddsLR[keep,]
keep <- rowSums(counts(ddsLR)) >= 10
ddsLR <- ddsLR[keep,]
head(ddsLR)
keep <- rowSums(counts(ddsLR)) >= 10
ddsLR <- ddsLR[keep,]
keep <- rowSums(counts(ddsLR)) >= 10
ddsLR <- ddsLR[keep,]
head(ddsLR)
plotMA(resLR, ylim=c(-2,2))
plotMA(resLR)
plotMA(resLR, ylim=c(-20,20)
)
plotMA(resLR, ylim=c(-20,20)
plotMA(resLR, ylim=c(-20,20))
table(countLR$approval_status)
table(countLR$Group3)
table(countLR$"Group3")
names <- c(2,3,4,5,6,7)
countLR[,names] <- lapply(countLR[,names] , factor)
table(countLR$Group3)
table(countLR$Group1)
glimpse(countLR)
head(countLR)
countLR<- dds@assays@data@listData[["counts"]]
head(countLR)
load("/Users/dshipilina/GitHub/VanessaExpression/deseq2_qc/deseq2.dds.RData")
#dds
head(colData(dds))
head(colData(dds))
colData[,names] <- lapply(colData[,names] , factor)
colData
colDataLR <- colData(dds)
colDataLR
colDataLR[,names] <- lapply(colDataLR[,names] , factor)
colDataLR[,1]
colDataLR[,2]
colDataLR[,3]
table(colData$Group1)
colData$Group1
colData$"Group1"
colDataLR$"Group1"
colDataLR$Group1
table(colDataLR$Group1)
table(colDataLR$Group3)
colDataAbs = colDataLR %>% filter(Group3 == "A")
colDataAbs = colDataLR %>% filter(Group3 == "A")
names(colDataLR)[names(colDataLR)=="Group3"]<-"tissue"
colDataLR
names(colDataLR)[names(colDataLR)=="Group1"]<-"condition"
colDataLR
colDataLR[colDataLR$tissue == "A", ]
1. Preparing data
```{r}
load("/Users/dshipilina/GitHub/VanessaExpression/deseq2_qc/deseq2.dds.RData")
head(colData(dds))
countLR<- dds@assays@data@listData[["counts"]]
colDataLR <- colData(dds)
names(colDataLR)[names(colDataLR)=="Group3"]<-"tissue"
names(colDataLR)[names(colDataLR)=="Group1"]<-"condition"
colDataLR[colDataLR$tissue == "A", ]
```
2. Assembilng Deseq datast
```{r}
ddsLR <- DESeqDataSetFromMatrix(countData=countLR, colData =colDataLR, design = ~condition)
keep <- rowSums(counts(ddsLR)) >= 10
ddsLR <- ddsLR[keep,]
head(ddsLR)
```
```
1. Preparing data
```{r}
load("/Users/dshipilina/GitHub/VanessaExpression/deseq2_qc/deseq2.dds.RData")
head(colData(dds))
countLR<- dds@assays@data@listData[["counts"]]
colDataLR <- colData(dds)
names(colDataLR)[names(colDataLR)=="Group3"]<-"tissue"
names(colDataLR)[names(colDataLR)=="Group1"]<-"condition"
colDataLR[colDataLR$tissue == "A", ]
```
2. Assembilng Deseq datast
```{r}
ddsLR <- DESeqDataSetFromMatrix(countData=countLR, colData =colDataLR, design = ~condition)
keep <- rowSums(counts(ddsLR)) >= 10
ddsLR <- ddsLR[keep,]
head(ddsLR)
```
```
head(colData(dds))
countLR<- dds@assays@data@listData[["counts"]]
countLR
1. Preparing data
```{r}
load("/Users/dshipilina/GitHub/VanessaExpression/deseq2_qc/deseq2.dds.RData")
head(colData(dds))
countLR<- dds@assays@data@listData[["counts"]]
colDataLR <- colData(dds)
names(colDataLR)[names(colDataLR)=="Group3"]<-"tissue"
names(colDataLR)[names(colDataLR)=="Group1"]<-"condition"
colDataLR=colDataLR[colDataLR$tissue == "A", ]
```
2. Assembilng Deseq datast
```{r}
ddsLR <- DESeqDataSetFromMatrix(countData=countLR, colData =colDataLR, design = ~condition)
keep <- rowSums(counts(ddsLR)) >= 10
ddsLR <- ddsLR[keep,]
head(ddsLR)
```
```
1. Preparing data
```{r}
load("/Users/dshipilina/GitHub/VanessaExpression/deseq2_qc/deseq2.dds.RData")
head(colData(dds))
countLR<- dds@assays@data@listData[["counts"]]
colDataLR <- colData(dds)
names(colDataLR)[names(colDataLR)=="Group3"]<-"tissue"
names(colDataLR)[names(colDataLR)=="Group1"]<-"condition"
colDataLR=colDataLR[colDataLR$tissue == "A", ]
```
2. Assembilng Deseq datast
```{r}
ddsLR <- DESeqDataSetFromMatrix(countData=countLR, colData =colDataLR, design = ~condition)
keep <- rowSums(counts(ddsLR)) >= 10
ddsLR <- ddsLR[keep,]
head(ddsLR)
```
```
1. Preparing data
```{r}
load("/Users/dshipilina/GitHub/VanessaExpression/deseq2_qc/deseq2.dds.RData")
head(colData(dds))
countLR<- dds@assays@data@listData[["counts"]]
colDataLR <- colData(dds)
names(colDataLR)[names(colDataLR)=="Group3"]<-"tissue"
names(colDataLR)[names(colDataLR)=="Group1"]<-"condition"
colDataLR=colDataLR[colDataLR$tissue == "A", ]
```
2. Assembilng Deseq datast
```{r}
ddsLR <- DESeqDataSetFromMatrix(countData=countLR, colData =colDataLR, design = ~condition)
keep <- rowSums(counts(ddsLR)) >= 10
ddsLR <- ddsLR[keep,]
head(ddsLR)
```
1. Preparing data
```{r}
load("/Users/dshipilina/GitHub/VanessaExpression/deseq2_qc/deseq2.dds.RData")
head(colData(dds))
countLR<- dds@assays@data@listData[["counts"]]
colDataLR <- colData(dds)
names(colDataLR)[names(colDataLR)=="Group3"]<-"tissue"
names(colDataLR)[names(colDataLR)=="Group1"]<-"condition"
colDataLR=colDataLR[colDataLR$tissue == "A", ]
```
2. Assembilng Deseq datast
```{r}
ddsLR <- DESeqDataSetFromMatrix(countData=countLR, colData =colDataLR, design = ~condition)
keep <- rowSums(counts(ddsLR)) >= 10
ddsLR <- ddsLR[keep,]
head(ddsLR)
```
3. Analysis
```{r}
ddsLR <- DESeq(ddsLR)
resLR <- results(ddsLR)
resLR <- resLR[order(resLR$padj),]
head(resLR)
```
4. Plotting
```{r}
plotMA(resLR, ylim=c(-20,20))
```
4. Plotting
```{r}
plotMA(resLR, ylim=c(-2,2))
```
1. Preparing data
```{r}
load("/Users/dshipilina/GitHub/VanessaExpression/deseq2_qc/deseq2.dds.RData")
head(colData(dds))
countLR<- dds@assays@data@listData[["counts"]]
colDataLR <- colData(dds)
names(colDataLR)[names(colDataLR)=="Group3"]<-"tissue"
names(colDataLR)[names(colDataLR)=="Group1"]<-"condition"
colDataLR=colDataLR[colDataLR$tissue == "A", ]
```
2. Assembilng Deseq datast
```{r}
ddsLR <- DESeqDataSetFromMatrix(countData=countLR, colData =colDataLR, design = ~condition)
keep <- rowSums(counts(ddsLR)) >= 20
ddsLR <- ddsLR[keep,]
head(ddsLR)
```
3. Analysis
```{r}
ddsLR <- DESeq(ddsLR)
resLR <- results(ddsLR)
resLR <- resLR[order(resLR$padj),]
head(resLR)
```
res05 <- results(ddsLR, alpha=0.05)
head(res05)
summary(resLR)
resLR <- results(ddsLR)
head(resLR)
resLR <- resLR[order(resLR$padj),]
resLR
sum(resLR$padj < 0.1, na.rm=TRUE)
4. Plotting
```{r}
plotMA(resLR, ylim=c(-2,2))
vsdata <- vst(ddsLR, blind=FALSE)
plotPCA(vsdata, intgroup="condition")
```
colDataLR
Preparing data
```{r}
load("/Users/dshipilina/GitHub/VanessaExpression/deseq2_qc/deseq2.dds.RData")
head(colData(dds))
countLR<- dds@assays@data@listData[["counts"]]
colDataLR <- colData(dds)
names(colDataLR)[names(colDataLR)=="Group3"]<-"tissue"
names(colDataLR)[names(colDataLR)=="Group1"]<-"condition"
colDataLR=colDataLR[colDataLR$tissue == "A", ]
```
Assembilng Deseq datast
```{r}
ddsLR <- DESeqDataSetFromMatrix(countData=countLR, colData =colDataLR, design = ~condition)
keep <- rowSums(counts(ddsLR)) >= 20
ddsLR <- ddsLR[keep,]
head(ddsLR)
```
Analysis
```{r}
ddsLR <- DESeq(ddsLR)
resLR <- results(ddsLR)
resLR <- resLR[order(resLR$padj),]
head(resLR)
```
Plotting
```{r}
plotMA(resLR, ylim=c(-2,2))
vsdata <- vst(ddsLR, blind=FALSE)
plotPCA(vsdata, intgroup="condition")
```
